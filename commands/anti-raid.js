const { ActionRowBuilder, ButtonBuilder, ButtonStyle, PermissionsBitField } = require('discord.js');
const serverConfig = require('../utils/serverConfig');

module.exports = {
    name: 'anti-raid',
    description: 'G√®re la protection anti-raid du serveur',
    usage: '+anti-raid <on/off/setup/status>',
    permissions: 'Administrator',
    async execute(message, args) {
        if (!message.member.permissions.has(PermissionsBitField.Flags.Administrator)) {
            return message.reply('‚ùå Vous devez √™tre administrateur pour utiliser cette commande.');
        }

        const action = args[0]?.toLowerCase();
        const config = serverConfig.getConfig(message.guild.id);

        // Si pas d'arguments, afficher l'aide
        if (!action) {
            const helpEmbed = {
                color: 0x0099ff,
                title: 'üõ°Ô∏è Aide Anti-Raid',
                description: 'Le syst√®me anti-raid prot√®ge votre serveur contre les raids et les attaques massives.',
                fields: [
                    {
                        name: 'Commandes disponibles',
                        value: [
                            '`+anti-raid on` - Active la protection',
                            '`+anti-raid off` - D√©sactive la protection',
                            '`+anti-raid status` - Affiche l\'√©tat actuel',
                            '`+anti-raid setup` - Configure les param√®tres'
                        ].join('\n')
                    },
                    {
                        name: 'Fonctionnalit√©s',
                        value: [
                            '‚Ä¢ D√©tection des joins massifs',
                            '‚Ä¢ V√©rification des comptes suspects',
                            '‚Ä¢ Protection contre le spam',
                            '‚Ä¢ Blocage automatique des raids',
                            '‚Ä¢ Notifications aux mod√©rateurs'
                        ].join('\n')
                    },
                    {
                        name: 'Actions automatiques',
                        value: 'En cas de raid d√©tect√© :\n‚Ä¢ Expulsion des nouveaux comptes suspects\n‚Ä¢ Verrouillage temporaire des salons\n‚Ä¢ Alertes dans le salon de logs'
                    }
                ],
                footer: { text: 'Protection 24/7 de votre serveur' }
            };
            return message.reply({ embeds: [helpEmbed] });
        }

        switch (action) {
            case 'on':
                serverConfig.updateConfig(message.guild.id, { 
                    antiRaid: true,
                    raidMode: {
                        enabled: true,
                        joinThreshold: 5,
                        timeWindow: 10000,
                        action: 'kick'
                    }
                });
                return message.reply({
                    embeds: [{
                        color: 0x00ff00,
                        title: '‚úÖ Protection anti-raid activ√©e',
                        description: 'Le serveur est maintenant prot√©g√© contre les raids.',
                        fields: [
                            { name: 'Mode', value: 'Actif et en surveillance', inline: true },
                            { name: 'S√©curit√©', value: 'Protection maximale', inline: true }
                        ]
                    }]
                });

            case 'off':
                serverConfig.updateConfig(message.guild.id, { antiRaid: false });
                return message.reply({
                    embeds: [{
                        color: 0xff0000,
                        title: 'üõë Protection anti-raid d√©sactiv√©e',
                        description: 'La protection du serveur a √©t√© d√©sactiv√©e.\n‚ö†Ô∏è Le serveur est maintenant vuln√©rable aux raids.'
                    }]
                });

            case 'status':
                const statusEmbed = {
                    color: config.antiRaid ? 0x00ff00 : 0xff0000,
                    title: 'üìä √âtat de la protection anti-raid',
                    fields: [
                        { name: '√âtat', value: config.antiRaid ? '‚úÖ Activ√©e' : '‚ùå D√©sactiv√©e', inline: true },
                        { name: 'Mode', value: config.raidMode?.enabled ? 'üõ°Ô∏è S√©curit√© renforc√©e' : 'üõ°Ô∏è Normal', inline: true },
                        { name: 'Param√®tres actuels', value: [
                            `Seuil de joins: ${config.raidMode?.joinThreshold || 5} joins`,
                            `Fen√™tre de temps: ${config.raidMode?.timeWindow ? (config.raidMode.timeWindow/1000) : 10}s`,
                            `Action: ${config.raidMode?.action || 'kick'}`
                        ].join('\n') },
                        { name: 'Derni√®re activation', value: config.lastActivation ? `<t:${Math.floor(config.lastActivation/1000)}:R>` : 'Jamais' }
                    ],
                    footer: { text: 'Utilisez +anti-raid setup pour modifier les param√®tres' }
                };
                return message.reply({ embeds: [statusEmbed] });

            case 'setup':
                async function setupAntiRaid(message) {
                    try {
                        await message.channel.send('üìù Combien de joins suspects en combien de secondes ? (format: nombre/secondes, exemple: 5/10)');
                        
                        const filter = m => m.author.id === message.author.id;
                        const collected = await message.channel.awaitMessages({
                            filter,
                            max: 1,
                            time: 30000,
                            errors: ['time']
                        });

                        const response = collected.first().content;
                        const [joins, seconds] = response.split('/').map(Number);

                        if (!joins || !seconds || isNaN(joins) || isNaN(seconds)) {
                            return message.reply('‚ùå Format invalide. Exemple correct: `5/10` pour 5 joins en 10 secondes.');
                        }

                        // V√©rifier que les valeurs sont raisonnables
                        if (joins < 2 || joins > 20 || seconds < 5 || seconds > 60) {
                            return message.reply('‚ùå Valeurs invalides. Le nombre de joins doit √™tre entre 2 et 20, et les secondes entre 5 et 60.');
                        }

                        const config = {
                            enabled: true,
                            joinThreshold: joins,
                            timeWindow: seconds,
                            action: 'kick' // Action par d√©faut
                        };

                        // Sauvegarder la configuration
                        saveAntiRaidConfig(message.guild.id, config);

                        return message.reply({
                            embeds: [{
                                color: 0x00ff00,
                                title: '‚úÖ Configuration Anti-Raid',
                                description: 'La protection anti-raid a √©t√© configur√©e avec succ√®s !',
                                fields: [
                                    { name: 'Seuil de d√©tection', value: `${joins} joins en ${seconds} secondes`, inline: true },
                                    { name: 'Action', value: 'Kick', inline: true },
                                    { name: 'Status', value: 'Activ√© ‚úÖ', inline: true }
                                ],
                                footer: { text: 'Utilisez +anti-raid status pour voir la configuration actuelle' }
                            }]
                        });
                    } catch (error) {
                        if (error.name === 'DiscordAPIError') {
                            return message.reply('‚ùå Une erreur est survenue. V√©rifiez que j\'ai les permissions n√©cessaires.');
                        }
                        return message.reply('‚ùå Configuration annul√©e - temps √©coul√© ou erreur.');
                    }
                }

                setupAntiRaid(message);

                return;

            default:
                return message.reply('‚ùå Action invalide. Utilisez `on`, `off`, `status` ou `setup`.');
        }
    }
};
